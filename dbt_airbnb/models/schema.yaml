version: 2

models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains all the listings
    columns:
      - name: listing_id
        description: Primary key for dim_listings
        tests:
          - unique
          - not_null

      - name: host_id
        description: The hosts's id. References the host table.
        tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id

      - name: room_type
        description: Tyoe of appartment
        tests:
          - accepted_values:
              values: ['Entire home/apt', 'Private room', 'Shared room', 'Hotel room']

      - name: minimum_nights
        description: '{{ doc("__minimum_nights") }}'
        # description: '{{ doc("dim_listing_cleansed__minimum_nights") }}'
        tests:
          - positive_value

  - name: dim_hosts_cleansed
    description: "Cleansed table which contains all the hosts. `Note:` This schema is created using dbutils.generate_model_yaml"
    columns:
      - name: host_id
        data_type: number
        description: "host identifier (Primary key)"
        tests:
          - unique
          - not_null

      - name: host_name
        data_type: varchar
        description: "host name"
        tests:
          - not_null

      - name: is_superhost
        data_type: varchar
        description: "whether the host is supehost or not"
        tests:
          - accepted_values:
              values: ['t', 'f']

      - name: created_at
        data_type: timestamp_ntz
        description: "timestamp when host was created in the database"

      - name: updated_at
        data_type: timestamp_ntz
        description: "timestamp when host updates details in database"

  - name: dim_listings_with_host
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source('airbnb', 'listings')
    columns:
      - name: price
        description: "Price of the listing"
        tags: ['tag1', 'tag2']
        tests:
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: 0.99
              min_value: 50
              max_value: 500
              tags: ['ge_tests']
          - dbt_expectations.expect_column_max_to_be_between:
              # min_value: 1 # (Optional)
              max_value: 7000
              config:
                severity: warn
              tags: ['ge_tests']
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number
              tags: ['ge_tests']
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "[0-9]+"
              tags: ['ge_tests']
              config:
                severity: warn
          - dbt_expectations.expect_column_stdev_to_be_between:
              min_value: 100 # (Optional)
              max_value: 110 # (Optional)
              row_condition: "price is not null"
              tags: ['ge_tests']
              config:
                severity: warn